apiVersion: apps/v1
kind: Deployment
metadata:
  name: ray-cluster-head
  namespace: ypp
  labels:
    ray: head
spec:
  replicas: 1
  selector:
    matchLabels:
      ray: head
  template:
    metadata:
      labels:
        ray: head
    spec:
      containers:
      - name: ray-head
        image: py846260131/kscale-text2img-app:mps-03
        command: [ "bash", "-c", "ray start --head --dashboard-host=0.0.0.0 --disable-usage-stats --num-cpus=1 && sleep infinity"]
        ports:
          - containerPort: 6379
            name: gcs-server
          - containerPort: 8265
            name: dashboard
          - containerPort: 10001
            name: client
          - containerPort: 8000
            name: serve
        resources:
          limits:
            cpu: 1
          requests:
            cpu: '250m'

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ray-cluster-workers
  namespace: ypp
  labels:
    ray: worker
spec:
  replicas: 2
  selector:
    matchLabels:
      ray: worker
  template:
    metadata:
      labels:
        ray: worker
    spec:
      containers:
      - name: ray-worker
        image: py846260131/kscale-text2img-app:mps-03
        command: [ "bash", "-c", "sleep 20 && ray start --address='ray-service:6379' --num-cpus=1 --num-gpus=1 && sleep infinity"]
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "ray stop"]
        resources:
          limits:
            cpu: 4
            nvidia.com/gpu.shared: 1
          requests:
            cpu: '500m'
            nvidia.com/gpu.shared: 1
        volumeMounts:
          - name: models-volume
            mountPath: /data
            subPath: data
      volumes:
        - name: models-volume
          persistentVolumeClaim:
            claimName: nfs-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: ray-service
  namespace: ypp
spec:
  type: NodePort
  selector:
    ray: head
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      nodePort: 30020
      name: serve
    - protocol: TCP
      port: 8265
      targetPort: 8265
      nodePort: 30021
      name: dashboard
    - protocol: TCP
      port: 6379
      targetPort: 6379
      nodePort: 30030
      name: gcs-server
    - protocol: TCP
      port: 10001
      targetPort: 10001
      nodePort: 30031
      name: client